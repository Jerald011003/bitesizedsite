[{"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\index.js":"1","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\App.js":"2","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\store.js":"4","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PremiumScreen.js":"5","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PlanScreen.js":"7","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Header.js":"8","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ShippingScreen.js":"9","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\UserListScreen.js":"10","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\RegisterScreen.js":"11","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\UserEditScreen.js":"12","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ProfileScreen.js":"13","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\CartScreen.js":"14","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\OrderScreen.js":"16","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\LoginScreen.js":"17","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PaymentScreen.js":"18","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\OrderListScreen.js":"19","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\test.js":"20","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ProductEditScreen.js":"21","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\CreateNewsScreen.js":"22","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\SportListScreen.js":"23","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\NewsScreen.js":"24","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\NewsListScreen.js":"25","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ProductListScreen.js":"26","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\GamingListScreen.js":"27","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\SportScreen.js":"28","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\SportList.js":"29","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\CreateNewsListScreen.js":"30","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\productReducers.js":"31","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\wishReducers.js":"32","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\newsReducer.js":"33","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\playlistReducer.js":"34","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\sportReducer.js":"35","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\preorderReducer.js":"36","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\orderReducers.js":"37","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\userReducers.js":"38","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\cartReducers.js":"39","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Rating.js":"40","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Loader.js":"41","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Message.js":"42","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\SearchBox.js":"43","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Product.js":"44","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\ProductCarousel.js":"45","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Paginate.js":"46","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\NewsCarousel.js":"47","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\News.js":"48","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Sport.js":"49","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\orderActions.js":"50","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\newsActions.js":"51","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\productActions.js":"52","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\sportActions.js":"53","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\userActions.js":"54","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\preorderConstants.js":"55","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\userConstants.js":"56","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\cartConstants.js":"57","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\productConstants.js":"58","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\playlistConstants.js":"59","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\sportConstants.js":"60","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\newsConstants.js":"61","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\wishConstants.js":"62","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\orderConstants.js":"63","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\playlistActions.js":"64","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\FormContainer.js":"65","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\cartActions.js":"66","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\CheckoutSteps.js":"67"},{"size":628,"mtime":1680334882954,"results":"68","hashOfConfig":"69"},{"size":3272,"mtime":1681557517880,"results":"70","hashOfConfig":"69"},{"size":362,"mtime":1616789579000,"results":"71","hashOfConfig":"69"},{"size":4225,"mtime":1681533365778,"results":"72","hashOfConfig":"69"},{"size":6968,"mtime":1681141775784,"results":"73","hashOfConfig":"69"},{"size":512,"mtime":1681141461746,"results":"74","hashOfConfig":"69"},{"size":1611,"mtime":1681140767935,"results":"75","hashOfConfig":"69"},{"size":8313,"mtime":1682525062336,"results":"76","hashOfConfig":"69"},{"size":6112,"mtime":1680874137702,"results":"77","hashOfConfig":"69"},{"size":3511,"mtime":1616789579000,"results":"78","hashOfConfig":"69"},{"size":3922,"mtime":1616789579000,"results":"79","hashOfConfig":"69"},{"size":3912,"mtime":1616789579000,"results":"80","hashOfConfig":"69"},{"size":7446,"mtime":1680872938257,"results":"81","hashOfConfig":"69"},{"size":3278,"mtime":1681142056856,"results":"82","hashOfConfig":"69"},{"size":3870,"mtime":1680874397412,"results":"83","hashOfConfig":"69"},{"size":5493,"mtime":1680874547009,"results":"84","hashOfConfig":"69"},{"size":2552,"mtime":1681141508636,"results":"85","hashOfConfig":"69"},{"size":1705,"mtime":1616789579000,"results":"86","hashOfConfig":"69"},{"size":3606,"mtime":1681141426526,"results":"87","hashOfConfig":"69"},{"size":110,"mtime":1681536273741,"results":"88","hashOfConfig":"69"},{"size":5971,"mtime":1681566599308,"results":"89","hashOfConfig":"69"},{"size":6065,"mtime":1681566578784,"results":"90","hashOfConfig":"69"},{"size":1866,"mtime":1681536337894,"results":"91","hashOfConfig":"69"},{"size":9880,"mtime":1681543501704,"results":"92","hashOfConfig":"69"},{"size":2336,"mtime":1681554884935,"results":"93","hashOfConfig":"69"},{"size":5035,"mtime":1681546005251,"results":"94","hashOfConfig":"69"},{"size":2412,"mtime":1681557575254,"results":"95","hashOfConfig":"69"},{"size":8959,"mtime":1681543801853,"results":"96","hashOfConfig":"69"},{"size":2412,"mtime":1681557565606,"results":"97","hashOfConfig":"69"},{"size":4646,"mtime":1681554249041,"results":"98","hashOfConfig":"69"},{"size":4080,"mtime":1680537176453,"results":"99","hashOfConfig":"69"},{"size":1057,"mtime":1680249692754,"results":"100","hashOfConfig":"69"},{"size":3922,"mtime":1681534688548,"results":"101","hashOfConfig":"69"},{"size":2235,"mtime":1680576844596,"results":"102","hashOfConfig":"69"},{"size":4105,"mtime":1681534811233,"results":"103","hashOfConfig":"69"},{"size":1121,"mtime":1680536264613,"results":"104","hashOfConfig":"69"},{"size":4079,"mtime":1616789579000,"results":"105","hashOfConfig":"69"},{"size":3926,"mtime":1616789579000,"results":"106","hashOfConfig":"69"},{"size":923,"mtime":1680413277746,"results":"107","hashOfConfig":"69"},{"size":1886,"mtime":1616789579000,"results":"108","hashOfConfig":"69"},{"size":458,"mtime":1682525060291,"results":"109","hashOfConfig":"69"},{"size":228,"mtime":1681553346125,"results":"110","hashOfConfig":"69"},{"size":1041,"mtime":1680595265196,"results":"111","hashOfConfig":"69"},{"size":1292,"mtime":1680837255710,"results":"112","hashOfConfig":"69"},{"size":1419,"mtime":1680263360933,"results":"113","hashOfConfig":"69"},{"size":856,"mtime":1680776012990,"results":"114","hashOfConfig":"69"},{"size":1433,"mtime":1681526623188,"results":"115","hashOfConfig":"69"},{"size":1009,"mtime":1681527316737,"results":"116","hashOfConfig":"69"},{"size":1039,"mtime":1681538735286,"results":"117","hashOfConfig":"69"},{"size":7335,"mtime":1681566489061,"results":"118","hashOfConfig":"69"},{"size":6918,"mtime":1681566476616,"results":"119","hashOfConfig":"69"},{"size":6214,"mtime":1681566532452,"results":"120","hashOfConfig":"69"},{"size":5518,"mtime":1681566537985,"results":"121","hashOfConfig":"69"},{"size":7650,"mtime":1681566546656,"results":"122","hashOfConfig":"69"},{"size":116,"mtime":1680536566567,"results":"123","hashOfConfig":"69"},{"size":1479,"mtime":1616789579000,"results":"124","hashOfConfig":"69"},{"size":287,"mtime":1616789579000,"results":"125","hashOfConfig":"69"},{"size":1502,"mtime":1616789579000,"results":"126","hashOfConfig":"69"},{"size":577,"mtime":1680575633714,"results":"127","hashOfConfig":"69"},{"size":1502,"mtime":1681530822817,"results":"128","hashOfConfig":"69"},{"size":1389,"mtime":1681431872079,"results":"129","hashOfConfig":"69"},{"size":100,"mtime":1680248704816,"results":"130","hashOfConfig":"69"},{"size":1416,"mtime":1680766548574,"results":"131","hashOfConfig":"69"},{"size":2889,"mtime":1681566520458,"results":"132","hashOfConfig":"69"},{"size":378,"mtime":1616789579000,"results":"133","hashOfConfig":"69"},{"size":1372,"mtime":1681577200483,"results":"134","hashOfConfig":"69"},{"size":1577,"mtime":1680874207817,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1o5uyp9",{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"138"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"138"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\index.js",[],["302","303"],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\App.js",["304","305"],"import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport PlanScreen from './screens/PlanScreen'\nimport ProductScreen from './screens/PremiumScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport SportListScreen from './screens/SportListScreen'\nimport News from './screens/NewsListScreen'\nimport NewsScreen from './screens/NewsScreen'\nimport SportScreen from './screens/SportScreen'\nimport CreatePostScreen from './screens/CreateNewsScreen'\nimport test from './screens/test'\nimport CreateNewsListScreen from './screens/CreateNewsListScreen'\nimport GamingListScreen from './screens/GamingListScreen'\nimport SportsList from './screens/SportList'\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={News} exact />\n       \n          <Route path='/admin/news/:id/edit' component={CreatePostScreen} />\n          <Route path='/admin/newslist' component={CreateNewsListScreen} />\n          <Route path='/newslist' component={CreateNewsListScreen} />\n          <Route path='/create/news/:id/edit' component={CreatePostScreen} />\n          <Route path='/gaming' component={GamingListScreen} exact />\n          <Route path='/sports' component={SportsList} exact />\n\n\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        \n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n\n  \n\n          <Route path='/plan' component={PlanScreen} exact />\n          <Route path='/news/:id' component={NewsScreen} />\n          <Route path='/test' component={test} />\n   \n\n\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\store.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PremiumScreen.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form, ListGroupItem } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\nimport axios from 'axios';\nimport { listMyOrders } from '../actions/orderActions';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nimport { Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\nfunction ProductScreen({ match, history }) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [wishlist, setWishlist] = useState([]);\n  const [bought, setBought] = useState(false);\n  const [owned, setOwned] = useState(false);\n  const [boughtQty, setBoughtQty] = useState(1); // new state variable to track the number of products the user has already bought\n\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order} = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  \n\n  useEffect(() => {\n    dispatch({ type: ORDER_LIST_MY_RESET }); // reset the orders state when the component mounts\n    dispatch(listMyOrders(order)); // call the API to get the user's orders\n  }, [dispatch]);\n  \n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n  \n  \n  // const dispatch = useDispatch()\n\n  \n\n\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n  \n  const deleteOrderHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch({ type: ORDER_DELETE_REQUEST });\n\n      dispatch(deleteOrder(id)).then((res) => {\n        if (res.type === ORDER_DELETE_SUCCESS) {\n          dispatch(listMyOrders());\n        } else if (res.type === ORDER_DELETE_FAIL) {\n          console.log(res.payload);\n        }\n      });\n    }\n  };\n\n  return (\n    <div >\n      <Link to=\"/plan\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div className='text-center'>\n          <Row className='text-center'>\n            {/* <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col> */}\n\n          \n\n            <Col md={12} className='text-center'>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n      \n                <ListGroup.Item className='text-center'>\n                  {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={12} className='text-center'>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                   \n\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                  \n                                            <ListGroup.Item className=\"d-flex justify-content-center\">\n\n  <Col md={12} className=\"text-center\">\n    <br/>\n  <h5 className=\"d-flex justify-content-center\">Click Buy!</h5>\n  {loadingOrders ? (\n    <Loader />\n  ) : errorOrders ? (\n    <Message variant='danger'>{errorOrders}</Message>\n  ) : (\n    <h1 className=\"text-center\">\n      {orders.map(order => (\n        <div key={order._id}>\n          <h2>\n            {order.isBought ? (\n              <i className='fas fa-check d-flex justify-content-center' style={{ color: 'green' }}></i>\n            ) : (\n              <i className='fas fa-times d-flex justify-content-center' style={{ color: 'red' }}></i>\n            )}\n          </h2>\n\n          <h4\n            // onClick={() => addToCartHandler(order)}\n            className=\"btn-block text-center\"\n            // type=\"button\"\n            disabled={order.isBought ? true : false} // set the disabled property based on order.isBought\n          >\n            You are already in plan\n          </h4>\n\n          <Button\n          className='btn-sm'\n          onClick={() => deleteOrderHandler(order._id)}\n        >\n          Cancel\n        </Button>\n        </div>\n      ))}\n    </h1>\n  )}\n</Col>\n\n</ListGroup.Item>\n<ListGroup.Item>\n\n<Button\n  onClick={() => addToCartHandler(order)}\n  className=\"btn-block text-center\"\n\n  type=\"button\"\n  disabled={orders && orders.some((order) => order.isBought)}\n>\n  Buy\n</Button>\n\n\n\n</ListGroup.Item>\n\n\n\n              </ListGroup>\n            </Card>\n        </Col>\n\n        </Row>\n  <Row>\n   \n  </Row>\n</div>\n)}\n</div>\n);\n}\nexport default ProductScreen;","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PlanScreen.js",["344","345"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport '../styles/Header.css'\n\nfunction HomeScreen({ history}) {\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { error, loading, products, page, pages } = productList\n\n  let keyword = ''\n\n  useEffect(() => {\n    dispatch(listProducts(keyword))\n  }, [dispatch, keyword])\n\n  return (\n    <div className=\"home-screen-container text-center\">\n      {/* {!keyword && <ProductCarousel />} */}\n      <h1>Go Premium\n        \n      </h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div className=\"home-screen-product-list-container text-center\">\n          <Row className=\"home-screen-product-list justify-content-center\">\n            {products.map(product => (\n              <Col key={product._id} sm={15} md={10} lg={4} xl={3} className=\"home-screen-product-col\">\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} className=\"home-screen-pagination\" />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default HomeScreen\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Header.js",["346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ShippingScreen.js",["379","380"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    const countries = [\n        'Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Antigua and Barbuda', 'Argentina', 'Armenia', 'Australia',\n        'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin',\n        'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi',\n        'Cabo Verde', 'Cambodia', 'Cameroon', 'Canada', 'Central African Republic', 'Chad', 'Chile', 'China', 'Colombia',\n        'Comoros', 'Congo, Democratic Republic of the', 'Congo, Republic of the', 'Costa Rica', 'Cote d\\'Ivoire', 'Croatia',\n        'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt',\n        'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Eswatini (formerly Swaziland)', 'Ethiopia', 'Fiji',\n        'Finland', 'France', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Greece', 'Grenada', 'Guatemala', 'Guinea',\n        'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland',\n        'Israel', 'Italy', 'Jamaica', 'Japan', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Kosovo', 'Kuwait', 'Kyrgyzstan',\n        'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Madagascar',\n        'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Mauritania', 'Mauritius', 'Mexico', 'Micronesia',\n        'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Morocco', 'Mozambique', 'Myanmar (formerly Burma)', 'Namibia', 'Nauru',\n        'Nepal', 'Netherlands', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'North Korea', 'North Macedonia (formerly Macedonia)',\n'Norway', 'Oman', 'Pakistan', 'Palau', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines',\n'Poland', 'Portugal', 'Qatar', 'Romania', 'Russia', 'Rwanda', 'Saint Kitts and Nevis', 'Saint Lucia',\n'Saint Vincent and the Grenadines', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal',\n'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia',\n'South Africa', 'South Korea', 'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Sweden', 'Switzerland',\n'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor-Leste (formerly East Timor)', 'Togo', 'Tonga',\n'Trinidad and Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates',\n'United Kingdom', 'United States of America', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City (Holy See)',\n'Venezuela', 'Vietnam', 'Yemen', 'Zambia', 'Zimbabwe'\n];\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Details</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter phone'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                    required\n                    as='select'\n                    value={country ? country : ''}\n                    onChange={(e) => setCountry(e.target.value)}\n                >\n                    <option value=''>Select country</option>\n                    {countries.map((country, index) => (\n                        <option key={index} value={country}>\n                            {country}\n                        </option>\n                    ))}\n                </Form.Control>\n                </Form.Group>\n                <h1></h1>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\UserListScreen.js",["381"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\RegisterScreen.js",["382"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\UserEditScreen.js",["383"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ProfileScreen.js",["384","385"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n\n    const deleteOrderHandler = (id) => {\n        if (window.confirm('Are you sure?')) {\n          dispatch({ type: ORDER_DELETE_REQUEST });\n    \n          dispatch(deleteOrder(id)).then((res) => {\n            if (res.type === ORDER_DELETE_SUCCESS) {\n              dispatch(listMyOrders());\n            } else if (res.type === ORDER_DELETE_FAIL) {\n              console.log(res.payload);\n            }\n          });\n        }\n      };\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>Purchases</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                    \n                                        <th>Payment</th>\n                                        <th>Do you want to cancel?</th>\n                                        <th>You are in Premium</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                        <td>\n                                          <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm'>Details</Button>\n                                          </LinkContainer>\n                                        </td>\n                                        <td>\n                                            <Button\n                                            className='btn-sm'\n                                            onClick={() => deleteOrderHandler(order._id)}\n                                            >\n                                            Cancel\n                                            </Button>\n                                        </td>\n\n                                        <td>{order.isBought ? <i className='fas fa-check' style={{ color: 'green' }}></i> : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                      </tr>\n                                      \n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\CartScreen.js",["386","387"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Go Premium</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                       \n                                       \n                                     \n\n                                        \n\n                                      \n\n                                        <Col md={2}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                Cancel\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={12}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Price</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item className='text-center'>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Pay\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PlaceOrderScreen.js",["388","389","390","391"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: [cart.cartItems[0]], // Only pass the first item in the array\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n              \n\n<Col className='text-center'>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Premium Purchase</h2>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Premium:</Col>\n                                <Col>${cart.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {/* <ListGroup.Item>\n                            <Row>\n                                <Col>Shipping:</Col>\n                                <Col>${cart.shippingPrice}</Col>\n                            </Row>\n                        </ListGroup.Item> */}\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax:</Col>\n                                <Col>${cart.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Total:</Col>\n                                <Col>${cart.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            {error && <Message variant='danger'>{error}</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cart.cartItems.length === 0}\n                                onClick={placeOrder}\n                            >\n                                Buy\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    </div>\n)\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\OrderScreen.js",["392","393","394","395","396","397","398"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AdBpHPdb251WJxSmZV3FxvQDXQZN01hrF0albnLIrH5JmIQlCv5eWa46flZdI2pdpLOF22LKgxBE3FSy'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n      \n    const download = () => {\n        window.location.href = order.download;\n      };\n      \n      \n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    {/* <h1>Order: {order.Id}</h1> */}\n                    <Row>\n                       \n\n                        <Col className='text-center'>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Pay it now!</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Premium:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                \n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                          \n\n\n               \n{order.isPaid && order.paymentMethod === 'PayPal' && (\n\n<h5 className='text-center'><br/>Enjoy! <br/><br/>Bite-sized Samson, Ian Russel is Ready to Serve you!<br/><br/></h5>\n)}\n\n\n\n\n            \n         \n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\PaymentScreen.js",["399"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\OrderListScreen.js",["400"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Users who avail subscription...</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    {/* <th>ID</th>\n                                    <th>USER</th> */}\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    {/* <th>DELIVERED</th> */}\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        {/* <td>{order._id}</td> */}\n                                        {/* <td>{order.user && order.user.name}</td> */}\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        {/* <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td> */}\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\test.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ProductEditScreen.js",["401","402","403","404"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n    const [download, setDownload] = useState('')\n    const [watch, setWatch] = useState('')\n    const [preorderdate, setPreorder] = useState('')\n    const dispatch = useDispatch()\n    const [uploadingDownload, setUploadingDownload] = useState(false)\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n                setDownload(product.download)\n                setWatch(product.watch)\n                setPreorder(product.preorderdate)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description,\n            download,\n            watch,\n            preorderdate\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('https://bitesizedsite.pythonanywhere.com/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    const uploadDownloadHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('download', file)\n        formData.append('product_id', productId)\n\n        setUploadingDownload(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('https://bitesizedsite.pythonanywhere.com/api/products/upload/', formData, config)\n\n\n            setDownload(data)\n            setUploadingDownload(false)\n\n        } catch (error) {\n            setUploadingDownload(false)\n\n        }\n    }\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Subscription</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                       \n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\CreateNewsScreen.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\SportListScreen.js",["405"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Sport from '../components/Sport';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listSports } from '../actions/sportActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\n// import SportCarousel from '../components/SportCarousel';\r\nimport SearchBox from '../components/SearchBox'; // import SearchBox component\r\nimport '../styles/Header.css';\r\n\r\nfunction SportListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const sportsList = useSelector(state => state.sportsList);\r\n  const { error, loading, sports, page, pages } = sportsList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listSports(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/Sportlist${keyword}&search=${keyword}`);\r\n    } else {\r\n      history.push(`/Sportlist/search/${keyword}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBox submitHandler={submitHandler} />\r\n      <br/>\r\n      {/* {!keyword && <SportCarousel />} */}\r\n      {/* <Sport /> */}\r\n      {/* <Sport /> */}\r\n      {loading ? (\r\n  <Loader />\r\n) : error ? (\r\n  <Message variant=\"danger\">{error}</Message>\r\n) : (\r\n  <div>\r\n    <Row className=\"justify-content-center\">\r\n      {sports.map((sportsitem) => (\r\n        <Col key={sportsitem._id} sm={12} md={3} lg={2} xl={12}>\r\n          <Sport sportsitem={sportsitem} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n\r\n    <Paginate\r\n      page={page}\r\n      pages={pages}\r\n      keyword={keyword}\r\n      className=\"home-screen-pagination\"\r\n    />\r\n  </div>\r\n)}\r\n\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SportListScreen;\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\NewsScreen.js",["406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listNewsDetails } from '../actions/newsActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { createPlaylist, deletePlaylist, listPlaylists } from '../actions/playlistActions';\r\nimport { useRef } from 'react';\r\nimport { createNewsReview } from '../actions/newsActions';\r\nimport { NEWS_CREATE_REVIEW_RESET } from '../constants/newsConstants';\r\n\r\n\r\n\r\nfunction NewsScreen({ match, history}) {\r\n  const { playlists } = useSelector((state) => state.playlistList);\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const newsDetails = useSelector(state => state.newsDetails);\r\n  const {  newsitem, error, loading} = newsDetails;\r\n\r\n\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const newsReviewCreate = useSelector(state => state.newsReviewCreate);\r\n  const {\r\n    loading: loadingnewsReview,\r\n    error: errornewsReview,\r\n    success: successnewsReview,\r\n  } = newsReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successnewsReview) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: NEWS_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listNewsDetails(match.params.id));\r\n  }, [dispatch, match, successnewsReview]);\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createNewsReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listNewsDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cartnews/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const addToWishlist = () => {\r\n    history.push(`/liked/${match.params.id}?qty=${qty}`);\r\n    setLiked(true); // Update the state to indicate that the user has liked the news\r\n\r\n  };\r\n\r\n  const addToPreorder = () => {\r\n    history.push(`/playlist/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n\r\n  const [showPremium, setShowPremium] = useState(false);\r\n  // const [showBasic, setShowBasic] = useState(true);\r\n\r\n  const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const [showDownload, setShowDownload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n    const handleDropdownToggle = () => {\r\n      setShowDropdown(!showDropdown);\r\n    };\r\n\r\n    const addToPlaylist = (playlistId, playlistTitle) => {\r\n      history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\r\n    };\r\n    const download = () => {\r\n      window.location.href = newsitem.download;\r\n    };\r\n \r\n  return (\r\n    <div>\r\n       \r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n     ) : error ? ( \r\n        <Message variant=\"danger\">{error}</Message>\r\n     ) : ( \r\n        <div>\r\n          <Row>\r\n          <Col sm={12} md={6} lg={4} xl={6} className=\"home-screen-product-col\">\r\n      \r\n    <ListGroup>\r\n      <Card>\r\n        <ListGroup>\r\n        <Image \r\n  src={newsitem.image} \r\n  alt={newsitem.headline} \r\n  fluid \r\n  className=\"float-md-end\" \r\n  style={{ width: '1250px', height: '500px', objectFit: 'cover' }}\r\n/>        </ListGroup>\r\n      </Card>\r\n\r\n   \r\n    </ListGroup>\r\n \r\n  \r\n  \r\n      <br />\r\n      <br />\r\n      <Card>\r\n        <ListGroup>\r\n          \r\n     \r\n</ListGroup>\r\n</Card>\r\n</Col>\r\n<Col md={6}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h1>{newsitem.headline}</h1>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {newsitem.description}\r\n                  \r\n     \r\n                </ListGroup.Item>\r\n\r\n\r\n                <ListGroup.Item>\r\n\r\n\r\n\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col md={6}>\r\n  <ListGroup>\r\n    {loadingOrders ? (\r\n      <Loader />\r\n    ) : errorOrders ? (\r\n      <Message variant='danger'>{errorOrders}</Message>\r\n    ) : (\r\n      <div>\r\n        <ListGroup.Item>\r\n          <div>\r\n            <Card>\r\n              <h2 className='text-center'>Comments</h2>\r\n              {newsitem.reviews.length === 0 && <Message>No comments</Message>}\r\n              <ListGroup variant='flush'>\r\n                {newsitem.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <h5>{review.name}</h5>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                \r\n              </ListGroup>\r\n            </Card>\r\n          </div>\r\n        </ListGroup.Item>\r\n      </div>\r\n    )}\r\n  </ListGroup>\r\n</Col>\r\n\r\n\r\n\r\n        <Col md={6}>\r\n              <ListGroup >\r\n\r\n         {loadingOrders ? (\r\n  <Loader /> \r\n) : errorOrders ? ( \r\n  <Message variant='danger'>{errorOrders}</Message> \r\n) : ( \r\n  orders.map(order => (\r\n\r\n    \r\n    <div key={order.id}>\r\n     \r\n      <h2>\r\n      {order.isPremium && order.isBought && (\r\n          <div>\r\n\r\n<ListGroup.Item>\r\n<div >\r\n<Card>\r\n      \r\n          {/* <h2 className='text-center'> Comments</h2> */}\r\n          {/* {newsitem.reviews.length === 0 && <Message>No Comments</Message>} */}\r\n        \r\n            <ListGroup.Item>\r\n              <h2>Write a Comment</h2>\r\n              {successnewsReview && (\r\n                <Message variant=\"success\">\r\n                  Comment submitted successfully\r\n                </Message>\r\n              )}\r\n              {loadingnewsReview && <Loader />}\r\n              {errornewsReview && (\r\n                <Message variant=\"danger\">{errornewsReview}</Message>\r\n              )}\r\n              {userInfo ? (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"rating\">\r\n                  \r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label></Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingnewsReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a comment</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    {/* </ListGroup> */}\r\n                              \r\n      </Card>\r\n</div>\r\n\r\n            </ListGroup.Item>\r\n\r\n        \r\n\r\n          </div>\r\n        )}\r\n      </h2>\r\n    </div>\r\n  ))\r\n\r\n  \r\n)}\r\n\r\n        \r\n\r\n     \r\n            </ListGroup>\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n   )} \r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default NewsScreen;\r\n\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\NewsListScreen.js",["443","444","445","446","447","448","449"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport News from '../components/News';\r\nimport Sport from '../components/Sport';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listNews } from '../actions/newsActions';\r\nimport { listSports } from '../actions/sportActions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\nimport NewsCarousel from '../components/NewsCarousel';\r\nimport SearchBox from '../components/SearchBox'; // import SearchBox component\r\nimport '../styles/Header.css';\r\n\r\nfunction NewsListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const newsList = useSelector(state => state.newsList);\r\n  const { error: newsError, loading: newsLoading, news, page: newsPage, pages: newsPages } = newsList;\r\n  \r\n  const sportsList = useSelector(state => state.sportsList);\r\n  const { error: sportsError, loading: sportsLoading, sports, page: sportsPage, pages: sportsPages } = sportsList;\r\n  \r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNews(keyword));\r\n    dispatch(listSports(keyword));\r\n\r\n  }, [dispatch, keyword]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/newslist${keyword}&search=${keyword}`);\r\n    } else {\r\n      history.push(`/newslist/search/${keyword}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBox submitHandler={submitHandler} />\r\n      <br/>\r\n      {!keyword && <NewsCarousel />}\r\n      {/* <Sport /> */}\r\n      {/* <News /> */}\r\n      {newsLoading ? (\r\n        <Loader />\r\n      ) : newsError ? (\r\n        <Message variant=\"danger\">{newsError}</Message>\r\n      ) : (\r\n        <div>\r\n<Row className=\"justify-content-center\">\r\n            {news.map((newsitem) => (\r\n              <Col key={newsitem._id} sm={12} md={3} lg={2} xl={12}>\r\n                <News newsitem={newsitem} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n         \r\n          \r\n          <Paginate\r\n            page={newsPage}\r\n            pages={newsPages}\r\n            keyword={keyword}\r\n            className=\"home-screen-pagination\"\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsListScreen;\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\ProductListScreen.js",["450"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    {/* <h1>Edit</h1> */}\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        {/* <th>ID</th> */}\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        {/* <th>CATEGORY</th>\n                                        <th>BRAND</th> */}\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            {/* <td>{product._id}</td> */}\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            {/* <td>{product.category}</td>\n                                            <td>{product.brand}</td> */}\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\GamingListScreen.js",["451","452","453","454","455","456","457","458","459"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport News from '../components/News';\r\nimport Sport from '../components/Sport';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listNews } from '../actions/newsActions';\r\nimport { listSports } from '../actions/sportActions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\nimport NewsCarousel from '../components/NewsCarousel';\r\nimport SearchBox from '../components/SearchBox'; // import SearchBox component\r\nimport '../styles/Header.css';\r\n\r\nfunction NewsListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const newsList = useSelector(state => state.newsList);\r\n  const { error: newsError, loading: newsLoading, news, page: newsPage, pages: newsPages } = newsList;\r\n  \r\n  const sportsList = useSelector(state => state.sportsList);\r\n  const { error: sportsError, loading: sportsLoading, sports, page: sportsPage, pages: sportsPages } = sportsList;\r\n  \r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNews(keyword));\r\n    dispatch(listSports(keyword));\r\n\r\n  }, [dispatch, keyword]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/newslist${keyword}&search=${keyword}`);\r\n    } else {\r\n      history.push(`/newslist/search/${keyword}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <SearchBox submitHandler={submitHandler} /> */}\r\n      <br/>\r\n      {!keyword && <NewsCarousel />}\r\n      {/* <Sport /> */}\r\n      {/* <News /> */}\r\n      {newsLoading ? (\r\n        <Loader />\r\n      ) : newsError ? (\r\n        <Message variant=\"danger\">{newsError}</Message>\r\n      ) : (\r\n        <div>\r\n<Row className=\"justify-content-center\">\r\n            {news.map((newsitem) => (\r\n               newsitem.category === 'gaming' &&\r\n               <Col key={newsitem._id} sm={12} md={3} lg={2} xl={12}>\r\n                 <News newsitem={newsitem} />\r\n               </Col>\r\n             \r\n            ))}\r\n          </Row>\r\n         \r\n          \r\n          <Paginate\r\n            page={newsPage}\r\n            pages={newsPages}\r\n            keyword={keyword}\r\n            className=\"home-screen-pagination\"\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsListScreen;\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\SportScreen.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listSportsDetails } from '../actions/sportActions';\r\n\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nimport { createSportsReview } from '../actions/sportActions';\r\nimport { SPORTS_CREATE_REVIEW_RESET } from '../constants/sportConstants';\r\n\r\n\r\n\r\nfunction SportScreen({ match, history}) {\r\n\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sportsDetails = useSelector(state => state.sportsDetails);\r\n  const {  sportitem, error, loading} = sportsDetails;\r\n\r\n\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const sportsReviewCreate = useSelector(state => state.sportsReviewCreate);\r\n  const {\r\n    loading: loadingSportReview,\r\n    error: errorSportReview,\r\n    success: successSportReview,\r\n  } = sportsReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successSportReview) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: SPORTS_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listSportsDetails(match.params.id));\r\n  }, [dispatch, match, successSportReview]);\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createSportsReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listSportsDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n\r\n  const [showPremium, setShowPremium] = useState(false);\r\n  // const [showBasic, setShowBasic] = useState(true);\r\n\r\n  const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const [showDownload, setShowDownload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n    const handleDropdownToggle = () => {\r\n      setShowDropdown(!showDropdown);\r\n    };\r\n\r\n    const addToPlaylist = (playlistId, playlistTitle) => {\r\n      history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\r\n    };\r\n    const download = () => {\r\n      window.location.href = sportitem.download;\r\n    };\r\n \r\n  return (\r\n    <div>\r\n       \r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n     ) : error ? ( \r\n        <Message variant=\"danger\">{error}</Message>\r\n     ) : ( \r\n        <div>\r\n          <Row>\r\n          <Col sm={12} md={6} lg={4} xl={6} className=\"home-screen-product-col\">\r\n      \r\n    <ListGroup>\r\n      <Card>\r\n        <ListGroup>\r\n        <Image \r\n  src={sportitem.image} \r\n  alt={sportitem.headline} \r\n  fluid \r\n  className=\"float-md-end\" \r\n  style={{ width: '1250px', height: '500px', objectFit: 'cover' }}\r\n/>        </ListGroup>\r\n      </Card>\r\n\r\n   \r\n    </ListGroup>\r\n \r\n  \r\n  \r\n      <br />\r\n      <br />\r\n      <Card>\r\n        <ListGroup>\r\n          \r\n     \r\n</ListGroup>\r\n</Card>\r\n</Col>\r\n<Col md={6}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h1>{sportitem.headline}</h1>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {sportitem.description}\r\n                  \r\n     \r\n                </ListGroup.Item>\r\n\r\n\r\n                <ListGroup.Item>\r\n\r\n\r\n\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col md={6}>\r\n  <ListGroup>\r\n    {loadingOrders ? (\r\n      <Loader />\r\n    ) : errorOrders ? (\r\n      <Message variant='danger'>{errorOrders}</Message>\r\n    ) : (\r\n      <div>\r\n        <ListGroup.Item>\r\n          <div>\r\n            <Card>\r\n              <h2 className='text-center'>Comments</h2>\r\n              {sportitem.reviews.length === 0 && <Message>No comments</Message>}\r\n              <ListGroup variant='flush'>\r\n                {sportitem.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <h5>{review.name}</h5>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                \r\n              </ListGroup>\r\n            </Card>\r\n          </div>\r\n        </ListGroup.Item>\r\n      </div>\r\n    )}\r\n  </ListGroup>\r\n</Col>\r\n\r\n\r\n\r\n        <Col md={6}>\r\n              <ListGroup >\r\n\r\n         {loadingOrders ? (\r\n  <Loader /> \r\n) : errorOrders ? ( \r\n  <Message variant='danger'>{errorOrders}</Message> \r\n) : ( \r\n  orders.map(order => (\r\n\r\n    \r\n    <div key={order.id}>\r\n     \r\n      <h2>\r\n      {order.isPremium && order.isBought && (\r\n          <div>\r\n\r\n<ListGroup.Item>\r\n<div >\r\n<Card>\r\n      \r\n          {/* <h2 className='text-center'> Comments</h2> */}\r\n          {/* {sportitem.reviews.length === 0 && <Message>No Comments</Message>} */}\r\n        \r\n            <ListGroup.Item>\r\n              <h2>Write a Comment</h2>\r\n              {successSportReview && (\r\n                <Message variant=\"success\">\r\n                  Comment submitted successfully\r\n                </Message>\r\n              )}\r\n              {loadingSportReview && <Loader />}\r\n              {errorSportReview && (\r\n                <Message variant=\"danger\">{errorSportReview}</Message>\r\n              )}\r\n              {userInfo ? (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"rating\">\r\n                  \r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label></Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingSportReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a comment</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    {/* </ListGroup> */}\r\n                              \r\n      </Card>\r\n</div>\r\n\r\n            </ListGroup.Item>\r\n\r\n        \r\n\r\n          </div>\r\n        )}\r\n      </h2>\r\n    </div>\r\n  ))\r\n\r\n  \r\n)}\r\n\r\n        \r\n\r\n     \r\n            </ListGroup>\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n   )} \r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default SportScreen;\r\n\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\SportList.js",["481","482","483","484","485","486","487","488","489"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport News from '../components/News';\r\nimport Sport from '../components/Sport';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listNews } from '../actions/newsActions';\r\nimport { listSports } from '../actions/sportActions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\nimport NewsCarousel from '../components/NewsCarousel';\r\nimport SearchBox from '../components/SearchBox'; // import SearchBox component\r\nimport '../styles/Header.css';\r\n\r\nfunction NewsListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const newsList = useSelector(state => state.newsList);\r\n  const { error: newsError, loading: newsLoading, news, page: newsPage, pages: newsPages } = newsList;\r\n  \r\n  const sportsList = useSelector(state => state.sportsList);\r\n  const { error: sportsError, loading: sportsLoading, sports, page: sportsPage, pages: sportsPages } = sportsList;\r\n  \r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNews(keyword));\r\n    dispatch(listSports(keyword));\r\n\r\n  }, [dispatch, keyword]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/newslist${keyword}&search=${keyword}`);\r\n    } else {\r\n      history.push(`/newslist/search/${keyword}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <SearchBox submitHandler={submitHandler} /> */}\r\n      <br/>\r\n      {!keyword && <NewsCarousel />}\r\n      {/* <Sport /> */}\r\n      {/* <News /> */}\r\n      {newsLoading ? (\r\n        <Loader />\r\n      ) : newsError ? (\r\n        <Message variant=\"danger\">{newsError}</Message>\r\n      ) : (\r\n        <div>\r\n<Row className=\"justify-content-center\">\r\n            {news.map((newsitem) => (\r\n               newsitem.category === 'sports' &&\r\n               <Col key={newsitem._id} sm={12} md={3} lg={2} xl={12}>\r\n                 <News newsitem={newsitem} />\r\n               </Col>\r\n             \r\n            ))}\r\n          </Row>\r\n         \r\n          \r\n          <Paginate\r\n            page={newsPage}\r\n            pages={newsPages}\r\n            keyword={keyword}\r\n            className=\"home-screen-pagination\"\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsListScreen;\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\screens\\CreateNewsListScreen.js",["490","491"],"import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport { getUserNews, listNews, deleteNews, createNews } from '../actions/newsActions';\r\nimport { NEWS_CREATE_RESET } from '../constants/newsConstants';\r\n\r\nfunction NewsListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\nconst newsList = useSelector(state => state.newsList);\r\nconst { loading, error, news, pages, page } = newsList;\r\n\r\nconst newsDelete = useSelector(state => state.newsDelete);\r\nconst { loading: loadingDelete, error: errorDelete, success: successDelete } = newsDelete;\r\n\r\nconst newsCreate = useSelector(state => state.newsCreate);\r\nconst { loading: loadingCreate, error: errorCreate, success: successCreate, newsitem: createdNews } = newsCreate;\r\n\r\nconst userLogin = useSelector(state => state.userLogin);\r\nconst { userInfo } = userLogin;\r\n\r\nlet keyword = history.location.search;\r\n\r\nuseEffect(() => {\r\n    dispatch({ type: NEWS_CREATE_RESET });\r\n  \r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n  \r\n    if (successCreate) {\r\n      history.push(`/create/news/${createdNews._id}/edit`);\r\n    } else {\r\n      dispatch(getUserNews(keyword, userInfo)); // Pass the userInfo object to filter news items by user\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdNews, keyword]);\r\n  \r\n\r\nconst deleteHandler = (id) => {\r\n\r\n    if (window.confirm('Are you sure you want to delete this news?')) {\r\n        dispatch(deleteNews(id));\r\n    }\r\n}\r\n\r\nconst createNewsHandler = () => {\r\n    dispatch(createNews());\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n           \r\n\r\n            <Col className='text-right'>\r\n                <Button className='my-3' onClick={createNewsHandler}>\r\n                    <i className='fas fa-plus'></i> Create\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n        {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'>You are not the owner</Message>}\r\n\r\n\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n        {loading\r\n            ? (<Loader />)\r\n            : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>User</th>\r\n                                    <th>TITLE</th>\r\n                                    <th>DESCRIPTION</th>\r\n                                    <th>DATE</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {news.map(item => (\r\n                                    <tr key={item._id}>\r\n                                        <td>{item.user}</td>\r\n\r\n                                        <td>{item.headline}</td>\r\n                                        <td>{item.description}</td>\r\n                                        {/* <td>{item.createdAt.substring(0, 10)}</td> */}\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/create/news/${item._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(item._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                       \r\n                            </Table>                    <Paginate pages={pages} page={page} keyword={keyword} />\r\n                </div>\r\n            )\r\n    }\r\n</div>\r\n)}\r\n\r\nexport default NewsListScreen;","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\wishReducers.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\newsReducer.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\playlistReducer.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\sportReducer.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\preorderReducer.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Message.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\SearchBox.js",["492"],"import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                placeholder='Search'\n\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            {/* <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Submit\n            </Button> */}\n          \n        </Form>\n    )\n}\n\nexport default SearchBox\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Product.js",["493"],"import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\nimport './Product.css'\nfunction Product({ product, plan }) {\n  return (\n    <div className=\"text-center\">\n    <Card className=\"my-3 p-3 rounded bg-light text-black \">\n      <Link to={`/product/${product._id}`}>\n        {/* <Card.Img src={product.image} variant=\"top\" /> */}\n      </Link>\n\n      <Card.Body >\n      <Link style={{ color: 'black', textDecoration: 'none' }} to={`/product/${product._id}`}>\n  <Card.Title as=\"h3\">\n    <strong>{product.name}</strong>\n  </Card.Title>\n</Link>\n\n\n        {/* <Card.Text as=\"div\">\n          <div className=\"my-3\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n              color={'#f8e825'}\n            />\n          </div>\n        </Card.Text> */}\n\n        <Card.Text as=\"h3\" className=\"mb-3\">\n          ${product.price}\n        </Card.Text>\n        \n{/* \n        <Card.Text as=\"h5\" className=\"mb-3\">\n  {product.countInStock === 0 ? \"Out of Stock\" : `Available`}\n</Card.Text> */}\n\n\n<Link to={`/product/${product._id}`} className=\"btn btn-secondary\">\n  View Details\n</Link>\n\n      </Card.Body>\n    </Card>\n    </div>\n  );\n}\n\nexport default Product;\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\NewsCarousel.js",["494"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopNews } from '../actions/newsActions'\r\n\r\nfunction NewsCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const  newsTopRated = useSelector(state => state. newsTopRated)\r\n    const { error, loading, news } =  newsTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopNews())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {news.map(newsitem => (\r\n                        <Carousel.Item key={newsitem._id}>\r\n                            <Link to={`/news/${newsitem._id}`}>\r\n                                <Image src={newsitem.image} alt={newsitem.title} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{newsitem.title} - {newsitem.name} </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default NewsCarousel\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\News.js",["495"],"import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\nimport './News.css'; // import your CSS file\r\n\r\nfunction News({ newsitem }) {\r\n  return (\r\n<Card className=\"my-3 p-3 rounded bg-light text-white text-center\">\r\n      <Link to={`/news/${newsitem._id}`}>\r\n      <Card.Img src={newsitem.image} variant=\"top\" style={{ width: '100%', height: '500px', objectFit: 'cover' }} />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link style={{ color: 'black', textDecoration: 'none' }} to={`/news/${newsitem._id}`}>\r\n          <Card.Text as=\"h3\">\r\n            <strong>{newsitem.headline}</strong>\r\n          </Card.Text>\r\n        </Link>\r\n\r\n        \r\n\r\n<Card.Text as=\"p\" style={{color: 'black'}}>\r\n  {newsitem.description}\r\n</Card.Text>\r\n        \r\n\r\n        <Link to={`/news/${newsitem._id}`} className=\"btn btn-primary\">\r\n          View Details\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\Sport.js",["496"],"import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\nimport './News.css'; // import your CSS file\r\n\r\nfunction Sport({ sportsitem }) {\r\n  return (\r\n<Card className=\"my-3 p-3 rounded bg-light text-white text-center\">\r\n      <Link to={`/sports/${sportsitem._id}`}>\r\n      <Card.Img src={sportsitem.image} variant=\"top\" style={{ width: '100%', height: '500px', objectFit: 'cover' }} />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link style={{ color: 'black', textDecoration: 'none' }} to={`/sports/${sportsitem._id}`}>\r\n          <Card.Text as=\"h3\">\r\n            <strong>{sportsitem.headline}</strong>\r\n          </Card.Text>\r\n        </Link>\r\n\r\n        \r\n\r\n<Card.Text as=\"p\" style={{color: 'black'}}>\r\n  {sportsitem.description}\r\n</Card.Text>\r\n        \r\n\r\n        <Link to={`/sports/${sportsitem._id}`} className=\"btn btn-primary\">\r\n          View Details\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default Sport;\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\orderActions.js",["497","498","499"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n    ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://bitesizedsite.pythonanywhere.com/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://bitesizedsite.pythonanywhere.com/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://bitesizedsite.pythonanywhere.com/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://bitesizedsite.pythonanywhere.com/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://bitesizedsite.pythonanywhere.com/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://bitesizedsite.pythonanywhere.com/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteOrder = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_DELETE_REQUEST });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      await axios.delete(`https://bitesizedsite.pythonanywhere.com/api/orders/${id}/delete/`, config);\n  \n      dispatch({ type: ORDER_DELETE_SUCCESS, payload: id });\n  \n      // Retrieve the list of orders and update the state\n      dispatch({ type: ORDER_LIST_MY_REQUEST });\n  \n      const { data } = await axios.get('https://bitesizedsite.pythonanywhere.com/api/orders/myorders/', config);\n  \n      dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\newsActions.js",["500"],"import axios from 'axios'\r\nimport {\r\n    NEWS_LIST_REQUEST,\r\n    NEWS_LIST_SUCCESS,\r\n    NEWS_LIST_FAIL,\r\n\r\n    NEWS_DETAILS_REQUEST,\r\n    NEWS_DETAILS_SUCCESS,\r\n    NEWS_DETAILS_FAIL,\r\n\r\n    NEWS_DELETE_REQUEST,\r\n    NEWS_DELETE_SUCCESS,\r\n    NEWS_DELETE_FAIL,\r\n\r\n    NEWS_CREATE_REQUEST,\r\n    NEWS_CREATE_SUCCESS,\r\n    NEWS_CREATE_FAIL,\r\n\r\n    NEWS_UPDATE_REQUEST,\r\n    NEWS_UPDATE_SUCCESS,\r\n    NEWS_UPDATE_FAIL,\r\n\r\n    NEWS_CREATE_REVIEW_REQUEST,\r\n    NEWS_CREATE_REVIEW_SUCCESS,\r\n    NEWS_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    NEWS_TOP_REQUEST,\r\n    NEWS_TOP_SUCCESS,\r\n    NEWS_TOP_FAIL,\r\n\r\n} from '../constants/newsConstants'\r\n\r\nexport const getUserNews = (keyword = '', userInfo = null) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: NEWS_LIST_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n  \r\n      if (userInfo) {\r\n        config.headers['Authorization'] = `Bearer ${userInfo.token}`;\r\n      }\r\n  \r\n      const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/news/mynews`, config);\r\n  \r\n      dispatch({\r\n        type: NEWS_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: NEWS_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\nexport const listNews = (keyword = '', userInfo = null) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: NEWS_LIST_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n  \r\n      if (userInfo) {\r\n        config.headers['Authorization'] = `Bearer ${userInfo.token}`;\r\n      }\r\n  \r\n      const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/news${keyword}`, config);\r\n  \r\n      dispatch({\r\n        type: NEWS_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: NEWS_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\nexport const listTopNews = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEWS_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/news/top/`)\r\n\r\n        dispatch({\r\n            type: NEWS_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEWS_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listNewsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEWS_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/news/${id}`)\r\n\r\n        dispatch({\r\n            type: NEWS_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEWS_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteNews = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NEWS_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `https://bitesizedsite.pythonanywhere.com/api/news/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: NEWS_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEWS_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createNews = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NEWS_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `https://bitesizedsite.pythonanywhere.com/api/news/newsitem/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: NEWS_CREATE_SUCCESS,\r\n            payload: data,\r\n})\r\n\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type: NEWS_CREATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    })\r\n}\r\n}\r\n\r\n\r\n\r\nexport const updateNews = (newsitem) => async (dispatch, getState) => {\r\n    try {\r\n    dispatch({\r\n    type: NEWS_UPDATE_REQUEST\r\n    })\r\n\r\n    const {\r\n        userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n        `https://bitesizedsite.pythonanywhere.com/api/news/update/${newsitem._id}/`,\r\n        newsitem,\r\n        config\r\n    )\r\n\r\n    dispatch({\r\n        type: NEWS_UPDATE_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type: NEWS_UPDATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const createNewsReview = (newId, review) => async (dispatch, getState) => {\r\n    try {\r\n    dispatch({\r\n    type: NEWS_CREATE_REVIEW_REQUEST\r\n    })\r\n\r\n    const {\r\n        userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    await axios.post(\r\n        `https://bitesizedsite.pythonanywhere.com/api/news/${newId}/reviews/`,\r\n        review,\r\n        config\r\n    )\r\n\r\n    dispatch({\r\n        type: NEWS_CREATE_REVIEW_SUCCESS,\r\n    })\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type: NEWS_CREATE_REVIEW_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    })\r\n}\r\n}\r\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\productActions.js",["501"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `https://bitesizedsite.pythonanywhere.com/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://bitesizedsite.pythonanywhere.com/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://bitesizedsite.pythonanywhere.com/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://bitesizedsite.pythonanywhere.com/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\sportActions.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\userActions.js",["502"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'https://bitesizedsite.pythonanywhere.com/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'https://bitesizedsite.pythonanywhere.com/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://bitesizedsite.pythonanywhere.com/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://bitesizedsite.pythonanywhere.com/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://bitesizedsite.pythonanywhere.com/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `https://bitesizedsite.pythonanywhere.com/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://bitesizedsite.pythonanywhere.com/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\preorderConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\playlistConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\sportConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\newsConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\wishConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\playlistActions.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\franc\\Desktop\\bitsizedsite-frontend\\frontend\\src\\components\\CheckoutSteps.js",[],{"ruleId":"503","replacedBy":"504"},{"ruleId":"505","replacedBy":"506"},{"ruleId":"507","severity":1,"message":"508","line":20,"column":8,"nodeType":"509","messageId":"510","endLine":20,"endColumn":23},{"ruleId":"507","severity":1,"message":"511","line":23,"column":8,"nodeType":"509","messageId":"510","endLine":23,"endColumn":19},{"ruleId":"507","severity":1,"message":"512","line":4,"column":20,"nodeType":"509","messageId":"510","endLine":4,"endColumn":25},{"ruleId":"507","severity":1,"message":"513","line":4,"column":52,"nodeType":"509","messageId":"510","endLine":4,"endColumn":56},{"ruleId":"507","severity":1,"message":"514","line":4,"column":58,"nodeType":"509","messageId":"510","endLine":4,"endColumn":71},{"ruleId":"507","severity":1,"message":"515","line":5,"column":8,"nodeType":"509","messageId":"510","endLine":5,"endColumn":14},{"ruleId":"507","severity":1,"message":"516","line":8,"column":30,"nodeType":"509","messageId":"510","endLine":8,"endColumn":49},{"ruleId":"507","severity":1,"message":"517","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":17},{"ruleId":"507","severity":1,"message":"518","line":11,"column":10,"nodeType":"509","messageId":"510","endLine":11,"endColumn":25},{"ruleId":"507","severity":1,"message":"519","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":25},{"ruleId":"507","severity":1,"message":"520","line":12,"column":27,"nodeType":"509","messageId":"510","endLine":12,"endColumn":35},{"ruleId":"507","severity":1,"message":"521","line":12,"column":37,"nodeType":"509","messageId":"510","endLine":12,"endColumn":49},{"ruleId":"507","severity":1,"message":"522","line":13,"column":10,"nodeType":"509","messageId":"510","endLine":13,"endColumn":25},{"ruleId":"507","severity":1,"message":"523","line":13,"column":27,"nodeType":"509","messageId":"510","endLine":13,"endColumn":46},{"ruleId":"507","severity":1,"message":"524","line":14,"column":8,"nodeType":"509","messageId":"510","endLine":14,"endColumn":13},{"ruleId":"507","severity":1,"message":"525","line":18,"column":10,"nodeType":"509","messageId":"510","endLine":18,"endColumn":15},{"ruleId":"507","severity":1,"message":"526","line":19,"column":10,"nodeType":"509","messageId":"510","endLine":19,"endColumn":23},{"ruleId":"507","severity":1,"message":"527","line":24,"column":15,"nodeType":"509","messageId":"510","endLine":24,"endColumn":21},{"ruleId":"507","severity":1,"message":"528","line":25,"column":10,"nodeType":"509","messageId":"510","endLine":25,"endColumn":16},{"ruleId":"507","severity":1,"message":"529","line":26,"column":10,"nodeType":"509","messageId":"510","endLine":26,"endColumn":17},{"ruleId":"507","severity":1,"message":"530","line":27,"column":10,"nodeType":"509","messageId":"510","endLine":27,"endColumn":18},{"ruleId":"507","severity":1,"message":"531","line":27,"column":20,"nodeType":"509","messageId":"510","endLine":27,"endColumn":31},{"ruleId":"507","severity":1,"message":"532","line":28,"column":10,"nodeType":"509","messageId":"510","endLine":28,"endColumn":16},{"ruleId":"507","severity":1,"message":"533","line":28,"column":18,"nodeType":"509","messageId":"510","endLine":28,"endColumn":27},{"ruleId":"507","severity":1,"message":"534","line":29,"column":10,"nodeType":"509","messageId":"510","endLine":29,"endColumn":15},{"ruleId":"507","severity":1,"message":"535","line":29,"column":17,"nodeType":"509","messageId":"510","endLine":29,"endColumn":25},{"ruleId":"507","severity":1,"message":"536","line":30,"column":10,"nodeType":"509","messageId":"510","endLine":30,"endColumn":19},{"ruleId":"507","severity":1,"message":"537","line":30,"column":21,"nodeType":"509","messageId":"510","endLine":30,"endColumn":33},{"ruleId":"507","severity":1,"message":"538","line":32,"column":9,"nodeType":"509","messageId":"510","endLine":32,"endColumn":16},{"ruleId":"507","severity":1,"message":"539","line":36,"column":10,"nodeType":"509","messageId":"510","endLine":36,"endColumn":18},{"ruleId":"507","severity":1,"message":"540","line":36,"column":20,"nodeType":"509","messageId":"510","endLine":36,"endColumn":31},{"ruleId":"507","severity":1,"message":"541","line":42,"column":20,"nodeType":"509","messageId":"510","endLine":42,"endColumn":30},{"ruleId":"507","severity":1,"message":"542","line":42,"column":41,"nodeType":"509","messageId":"510","endLine":42,"endColumn":51},{"ruleId":"507","severity":1,"message":"543","line":45,"column":20,"nodeType":"509","messageId":"510","endLine":45,"endColumn":34},{"ruleId":"507","severity":1,"message":"544","line":45,"column":45,"nodeType":"509","messageId":"510","endLine":45,"endColumn":59},{"ruleId":"507","severity":1,"message":"545","line":52,"column":11,"nodeType":"509","messageId":"510","endLine":52,"endColumn":19},{"ruleId":"507","severity":1,"message":"546","line":57,"column":14,"nodeType":"509","messageId":"510","endLine":57,"endColumn":34},{"ruleId":"507","severity":1,"message":"547","line":58,"column":12,"nodeType":"509","messageId":"510","endLine":58,"endColumn":30},{"ruleId":"548","severity":1,"message":"549","line":77,"column":6,"nodeType":"550","endLine":77,"endColumn":16,"suggestions":"551"},{"ruleId":"507","severity":1,"message":"552","line":91,"column":11,"nodeType":"509","messageId":"510","endLine":91,"endColumn":18},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"554","line":8,"column":8,"nodeType":"509","messageId":"510","endLine":8,"endColumn":23},{"ruleId":"507","severity":1,"message":"555","line":7,"column":10,"nodeType":"509","messageId":"510","endLine":7,"endColumn":16},{"ruleId":"507","severity":1,"message":"556","line":7,"column":18,"nodeType":"509","messageId":"510","endLine":7,"endColumn":27},{"ruleId":"507","severity":1,"message":"557","line":7,"column":29,"nodeType":"509","messageId":"510","endLine":7,"endColumn":43},{"ruleId":"507","severity":1,"message":"558","line":7,"column":53,"nodeType":"509","messageId":"510","endLine":7,"endColumn":60},{"ruleId":"507","severity":1,"message":"559","line":8,"column":10,"nodeType":"509","messageId":"510","endLine":8,"endColumn":24},{"ruleId":"507","severity":1,"message":"560","line":9,"column":10,"nodeType":"509","messageId":"510","endLine":9,"endColumn":18},{"ruleId":"507","severity":1,"message":"561","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":13},{"ruleId":"507","severity":1,"message":"512","line":12,"column":20,"nodeType":"509","messageId":"510","endLine":12,"endColumn":25},{"ruleId":"507","severity":1,"message":"562","line":12,"column":38,"nodeType":"509","messageId":"510","endLine":12,"endColumn":44},{"ruleId":"507","severity":1,"message":"563","line":12,"column":46,"nodeType":"509","messageId":"510","endLine":12,"endColumn":50},{"ruleId":"507","severity":1,"message":"513","line":12,"column":52,"nodeType":"509","messageId":"510","endLine":12,"endColumn":56},{"ruleId":"507","severity":1,"message":"517","line":15,"column":10,"nodeType":"509","messageId":"510","endLine":15,"endColumn":17},{"ruleId":"507","severity":1,"message":"518","line":16,"column":10,"nodeType":"509","messageId":"510","endLine":16,"endColumn":25},{"ruleId":"507","severity":1,"message":"564","line":17,"column":10,"nodeType":"509","messageId":"510","endLine":17,"endColumn":23},{"ruleId":"507","severity":1,"message":"565","line":18,"column":10,"nodeType":"509","messageId":"510","endLine":18,"endColumn":28},{"ruleId":"507","severity":1,"message":"516","line":18,"column":30,"nodeType":"509","messageId":"510","endLine":18,"endColumn":49},{"ruleId":"507","severity":1,"message":"566","line":19,"column":10,"nodeType":"509","messageId":"510","endLine":19,"endColumn":37},{"ruleId":"507","severity":1,"message":"567","line":20,"column":10,"nodeType":"509","messageId":"510","endLine":20,"endColumn":20},{"ruleId":"507","severity":1,"message":"568","line":21,"column":10,"nodeType":"509","messageId":"510","endLine":21,"endColumn":16},{"ruleId":"507","severity":1,"message":"569","line":24,"column":10,"nodeType":"509","messageId":"510","endLine":24,"endColumn":24},{"ruleId":"507","severity":1,"message":"570","line":27,"column":10,"nodeType":"509","messageId":"510","endLine":27,"endColumn":21},{"ruleId":"507","severity":1,"message":"571","line":28,"column":10,"nodeType":"509","messageId":"510","endLine":28,"endColumn":30},{"ruleId":"507","severity":1,"message":"572","line":28,"column":32,"nodeType":"509","messageId":"510","endLine":28,"endColumn":52},{"ruleId":"507","severity":1,"message":"573","line":28,"column":54,"nodeType":"509","messageId":"510","endLine":28,"endColumn":71},{"ruleId":"507","severity":1,"message":"574","line":48,"column":18,"nodeType":"509","messageId":"510","endLine":48,"endColumn":25},{"ruleId":"507","severity":1,"message":"575","line":49,"column":19,"nodeType":"509","messageId":"510","endLine":49,"endColumn":27},{"ruleId":"507","severity":1,"message":"576","line":50,"column":22,"nodeType":"509","messageId":"510","endLine":50,"endColumn":33},{"ruleId":"507","severity":1,"message":"577","line":51,"column":29,"nodeType":"509","messageId":"510","endLine":51,"endColumn":47},{"ruleId":"507","severity":1,"message":"578","line":52,"column":12,"nodeType":"509","messageId":"510","endLine":52,"endColumn":19},{"ruleId":"507","severity":1,"message":"579","line":56,"column":13,"nodeType":"509","messageId":"510","endLine":56,"endColumn":18},{"ruleId":"507","severity":1,"message":"580","line":56,"column":20,"nodeType":"509","messageId":"510","endLine":56,"endColumn":27},{"ruleId":"507","severity":1,"message":"552","line":61,"column":13,"nodeType":"509","messageId":"510","endLine":61,"endColumn":20},{"ruleId":"581","severity":1,"message":"582","line":83,"column":22,"nodeType":"583","messageId":"584","endLine":83,"endColumn":24},{"ruleId":"507","severity":1,"message":"585","line":1,"column":27,"nodeType":"509","messageId":"510","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"587","line":109,"column":17,"nodeType":"588","endLine":109,"endColumn":21},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":34,"column":22,"nodeType":"583","messageId":"584","endLine":34,"endColumn":24},{"ruleId":"548","severity":1,"message":"589","line":43,"column":8,"nodeType":"550","endLine":43,"endColumn":46,"suggestions":"590"},{"ruleId":"507","severity":1,"message":"591","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":14},{"ruleId":"581","severity":1,"message":"582","line":55,"column":22,"nodeType":"583","messageId":"584","endLine":55,"endColumn":24},{"ruleId":"507","severity":1,"message":"512","line":4,"column":31,"nodeType":"509","messageId":"510","endLine":4,"endColumn":36},{"ruleId":"507","severity":1,"message":"513","line":4,"column":38,"nodeType":"509","messageId":"510","endLine":4,"endColumn":42},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"512","line":2,"column":39,"nodeType":"509","messageId":"510","endLine":2,"endColumn":44},{"ruleId":"507","severity":1,"message":"591","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"548","severity":1,"message":"592","line":35,"column":8,"nodeType":"550","endLine":35,"endColumn":26,"suggestions":"593"},{"ruleId":"507","severity":1,"message":"562","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":16},{"ruleId":"507","severity":1,"message":"512","line":2,"column":39,"nodeType":"509","messageId":"510","endLine":2,"endColumn":44},{"ruleId":"507","severity":1,"message":"591","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"543","line":25,"column":22,"nodeType":"509","messageId":"510","endLine":25,"endColumn":36},{"ruleId":"548","severity":1,"message":"594","line":65,"column":8,"nodeType":"550","endLine":65,"endColumn":62,"suggestions":"595"},{"ruleId":"507","severity":1,"message":"596","line":72,"column":11,"nodeType":"509","messageId":"510","endLine":72,"endColumn":25},{"ruleId":"507","severity":1,"message":"597","line":77,"column":11,"nodeType":"509","messageId":"510","endLine":77,"endColumn":19},{"ruleId":"507","severity":1,"message":"585","line":1,"column":27,"nodeType":"509","messageId":"510","endLine":1,"endColumn":36},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"598","line":24,"column":12,"nodeType":"509","messageId":"510","endLine":24,"endColumn":21},{"ruleId":"507","severity":1,"message":"599","line":29,"column":12,"nodeType":"509","messageId":"510","endLine":29,"endColumn":29},{"ruleId":"507","severity":1,"message":"600","line":82,"column":11,"nodeType":"509","messageId":"510","endLine":82,"endColumn":28},{"ruleId":"507","severity":1,"message":"601","line":109,"column":11,"nodeType":"509","messageId":"510","endLine":109,"endColumn":32},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"515","line":5,"column":8,"nodeType":"509","messageId":"510","endLine":5,"endColumn":14},{"ruleId":"507","severity":1,"message":"517","line":9,"column":10,"nodeType":"509","messageId":"510","endLine":9,"endColumn":17},{"ruleId":"507","severity":1,"message":"518","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":25},{"ruleId":"507","severity":1,"message":"519","line":11,"column":10,"nodeType":"509","messageId":"510","endLine":11,"endColumn":25},{"ruleId":"507","severity":1,"message":"520","line":11,"column":27,"nodeType":"509","messageId":"510","endLine":11,"endColumn":35},{"ruleId":"507","severity":1,"message":"521","line":11,"column":37,"nodeType":"509","messageId":"510","endLine":11,"endColumn":49},{"ruleId":"507","severity":1,"message":"522","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":25},{"ruleId":"507","severity":1,"message":"523","line":12,"column":27,"nodeType":"509","messageId":"510","endLine":12,"endColumn":46},{"ruleId":"507","severity":1,"message":"602","line":13,"column":26,"nodeType":"509","messageId":"510","endLine":13,"endColumn":43},{"ruleId":"507","severity":1,"message":"603","line":16,"column":10,"nodeType":"509","messageId":"510","endLine":16,"endColumn":18},{"ruleId":"507","severity":1,"message":"604","line":17,"column":10,"nodeType":"509","messageId":"510","endLine":17,"endColumn":24},{"ruleId":"507","severity":1,"message":"605","line":17,"column":26,"nodeType":"509","messageId":"510","endLine":17,"endColumn":40},{"ruleId":"507","severity":1,"message":"606","line":17,"column":42,"nodeType":"509","messageId":"510","endLine":17,"endColumn":55},{"ruleId":"507","severity":1,"message":"607","line":18,"column":10,"nodeType":"509","messageId":"510","endLine":18,"endColumn":16},{"ruleId":"507","severity":1,"message":"608","line":25,"column":11,"nodeType":"509","messageId":"510","endLine":25,"endColumn":20},{"ruleId":"507","severity":1,"message":"527","line":29,"column":15,"nodeType":"509","messageId":"510","endLine":29,"endColumn":21},{"ruleId":"507","severity":1,"message":"609","line":30,"column":10,"nodeType":"509","messageId":"510","endLine":30,"endColumn":15},{"ruleId":"507","severity":1,"message":"530","line":41,"column":10,"nodeType":"509","messageId":"510","endLine":41,"endColumn":18},{"ruleId":"507","severity":1,"message":"531","line":41,"column":20,"nodeType":"509","messageId":"510","endLine":41,"endColumn":31},{"ruleId":"507","severity":1,"message":"610","line":81,"column":9,"nodeType":"509","messageId":"510","endLine":81,"endColumn":25},{"ruleId":"507","severity":1,"message":"611","line":85,"column":9,"nodeType":"509","messageId":"510","endLine":85,"endColumn":22},{"ruleId":"507","severity":1,"message":"612","line":91,"column":9,"nodeType":"509","messageId":"510","endLine":91,"endColumn":22},{"ruleId":"507","severity":1,"message":"613","line":96,"column":10,"nodeType":"509","messageId":"510","endLine":96,"endColumn":21},{"ruleId":"507","severity":1,"message":"614","line":96,"column":23,"nodeType":"509","messageId":"510","endLine":96,"endColumn":37},{"ruleId":"507","severity":1,"message":"615","line":99,"column":10,"nodeType":"509","messageId":"510","endLine":99,"endColumn":14},{"ruleId":"507","severity":1,"message":"616","line":100,"column":12,"nodeType":"509","messageId":"510","endLine":100,"endColumn":17},{"ruleId":"507","severity":1,"message":"617","line":101,"column":12,"nodeType":"509","messageId":"510","endLine":101,"endColumn":20},{"ruleId":"507","severity":1,"message":"576","line":101,"column":22,"nodeType":"509","messageId":"510","endLine":101,"endColumn":33},{"ruleId":"507","severity":1,"message":"618","line":102,"column":12,"nodeType":"509","messageId":"510","endLine":102,"endColumn":27},{"ruleId":"507","severity":1,"message":"577","line":102,"column":29,"nodeType":"509","messageId":"510","endLine":102,"endColumn":47},{"ruleId":"507","severity":1,"message":"578","line":103,"column":12,"nodeType":"509","messageId":"510","endLine":103,"endColumn":19},{"ruleId":"507","severity":1,"message":"619","line":103,"column":21,"nodeType":"509","messageId":"510","endLine":103,"endColumn":31},{"ruleId":"507","severity":1,"message":"620","line":118,"column":12,"nodeType":"509","messageId":"510","endLine":118,"endColumn":24},{"ruleId":"507","severity":1,"message":"621","line":118,"column":26,"nodeType":"509","messageId":"510","endLine":118,"endColumn":41},{"ruleId":"507","severity":1,"message":"622","line":134,"column":11,"nodeType":"509","messageId":"510","endLine":134,"endColumn":31},{"ruleId":"507","severity":1,"message":"623","line":138,"column":11,"nodeType":"509","messageId":"510","endLine":138,"endColumn":24},{"ruleId":"507","severity":1,"message":"597","line":141,"column":11,"nodeType":"509","messageId":"510","endLine":141,"endColumn":19},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"624","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":13},{"ruleId":"507","severity":1,"message":"625","line":23,"column":18,"nodeType":"509","messageId":"510","endLine":23,"endColumn":29},{"ruleId":"507","severity":1,"message":"626","line":23,"column":40,"nodeType":"509","messageId":"510","endLine":23,"endColumn":53},{"ruleId":"507","severity":1,"message":"627","line":23,"column":55,"nodeType":"509","messageId":"510","endLine":23,"endColumn":61},{"ruleId":"507","severity":1,"message":"628","line":23,"column":69,"nodeType":"509","messageId":"510","endLine":23,"endColumn":79},{"ruleId":"507","severity":1,"message":"629","line":23,"column":88,"nodeType":"509","messageId":"510","endLine":23,"endColumn":99},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"624","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":13},{"ruleId":"507","severity":1,"message":"630","line":14,"column":8,"nodeType":"509","messageId":"510","endLine":14,"endColumn":17},{"ruleId":"507","severity":1,"message":"625","line":23,"column":18,"nodeType":"509","messageId":"510","endLine":23,"endColumn":29},{"ruleId":"507","severity":1,"message":"626","line":23,"column":40,"nodeType":"509","messageId":"510","endLine":23,"endColumn":53},{"ruleId":"507","severity":1,"message":"627","line":23,"column":55,"nodeType":"509","messageId":"510","endLine":23,"endColumn":61},{"ruleId":"507","severity":1,"message":"628","line":23,"column":69,"nodeType":"509","messageId":"510","endLine":23,"endColumn":79},{"ruleId":"507","severity":1,"message":"629","line":23,"column":88,"nodeType":"509","messageId":"510","endLine":23,"endColumn":99},{"ruleId":"507","severity":1,"message":"631","line":33,"column":9,"nodeType":"509","messageId":"510","endLine":33,"endColumn":22},{"ruleId":"507","severity":1,"message":"602","line":9,"column":26,"nodeType":"509","messageId":"510","endLine":9,"endColumn":43},{"ruleId":"507","severity":1,"message":"527","line":23,"column":15,"nodeType":"509","messageId":"510","endLine":23,"endColumn":21},{"ruleId":"507","severity":1,"message":"609","line":24,"column":10,"nodeType":"509","messageId":"510","endLine":24,"endColumn":15},{"ruleId":"507","severity":1,"message":"632","line":24,"column":17,"nodeType":"509","messageId":"510","endLine":24,"endColumn":25},{"ruleId":"507","severity":1,"message":"530","line":35,"column":10,"nodeType":"509","messageId":"510","endLine":35,"endColumn":18},{"ruleId":"507","severity":1,"message":"531","line":35,"column":20,"nodeType":"509","messageId":"510","endLine":35,"endColumn":31},{"ruleId":"507","severity":1,"message":"613","line":76,"column":10,"nodeType":"509","messageId":"510","endLine":76,"endColumn":21},{"ruleId":"507","severity":1,"message":"614","line":76,"column":23,"nodeType":"509","messageId":"510","endLine":76,"endColumn":37},{"ruleId":"507","severity":1,"message":"615","line":79,"column":10,"nodeType":"509","messageId":"510","endLine":79,"endColumn":14},{"ruleId":"507","severity":1,"message":"616","line":80,"column":12,"nodeType":"509","messageId":"510","endLine":80,"endColumn":17},{"ruleId":"507","severity":1,"message":"617","line":81,"column":12,"nodeType":"509","messageId":"510","endLine":81,"endColumn":20},{"ruleId":"507","severity":1,"message":"576","line":81,"column":22,"nodeType":"509","messageId":"510","endLine":81,"endColumn":33},{"ruleId":"507","severity":1,"message":"618","line":82,"column":12,"nodeType":"509","messageId":"510","endLine":82,"endColumn":27},{"ruleId":"507","severity":1,"message":"577","line":82,"column":29,"nodeType":"509","messageId":"510","endLine":82,"endColumn":47},{"ruleId":"507","severity":1,"message":"578","line":83,"column":12,"nodeType":"509","messageId":"510","endLine":83,"endColumn":19},{"ruleId":"507","severity":1,"message":"619","line":83,"column":21,"nodeType":"509","messageId":"510","endLine":83,"endColumn":31},{"ruleId":"507","severity":1,"message":"620","line":98,"column":12,"nodeType":"509","messageId":"510","endLine":98,"endColumn":24},{"ruleId":"507","severity":1,"message":"621","line":98,"column":26,"nodeType":"509","messageId":"510","endLine":98,"endColumn":41},{"ruleId":"507","severity":1,"message":"622","line":114,"column":11,"nodeType":"509","messageId":"510","endLine":114,"endColumn":31},{"ruleId":"507","severity":1,"message":"623","line":118,"column":11,"nodeType":"509","messageId":"510","endLine":118,"endColumn":24},{"ruleId":"507","severity":1,"message":"597","line":121,"column":11,"nodeType":"509","messageId":"510","endLine":121,"endColumn":19},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"624","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":13},{"ruleId":"507","severity":1,"message":"630","line":14,"column":8,"nodeType":"509","messageId":"510","endLine":14,"endColumn":17},{"ruleId":"507","severity":1,"message":"625","line":23,"column":18,"nodeType":"509","messageId":"510","endLine":23,"endColumn":29},{"ruleId":"507","severity":1,"message":"626","line":23,"column":40,"nodeType":"509","messageId":"510","endLine":23,"endColumn":53},{"ruleId":"507","severity":1,"message":"627","line":23,"column":55,"nodeType":"509","messageId":"510","endLine":23,"endColumn":61},{"ruleId":"507","severity":1,"message":"628","line":23,"column":69,"nodeType":"509","messageId":"510","endLine":23,"endColumn":79},{"ruleId":"507","severity":1,"message":"629","line":23,"column":88,"nodeType":"509","messageId":"510","endLine":23,"endColumn":99},{"ruleId":"507","severity":1,"message":"631","line":33,"column":9,"nodeType":"509","messageId":"510","endLine":33,"endColumn":22},{"ruleId":"507","severity":1,"message":"553","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"633","line":8,"column":23,"nodeType":"509","messageId":"510","endLine":8,"endColumn":31},{"ruleId":"507","severity":1,"message":"562","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":16},{"ruleId":"507","severity":1,"message":"515","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"634","severity":1,"message":"635","line":12,"column":48,"nodeType":"636","messageId":"637","endLine":12,"endColumn":67,"fix":"638"},{"ruleId":"507","severity":1,"message":"515","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"515","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"522","line":14,"column":5,"nodeType":"509","messageId":"510","endLine":14,"endColumn":20},{"ruleId":"507","severity":1,"message":"639","line":19,"column":5,"nodeType":"509","messageId":"510","endLine":19,"endColumn":24},{"ruleId":"507","severity":1,"message":"523","line":28,"column":5,"nodeType":"509","messageId":"510","endLine":28,"endColumn":24},{"ruleId":"507","severity":1,"message":"640","line":158,"column":17,"nodeType":"509","messageId":"510","endLine":158,"endColumn":21},{"ruleId":"507","severity":1,"message":"640","line":117,"column":17,"nodeType":"509","messageId":"510","endLine":117,"endColumn":21},{"ruleId":"507","severity":1,"message":"641","line":21,"column":5,"nodeType":"509","messageId":"510","endLine":21,"endColumn":30},"no-native-reassign",["642"],"no-negated-in-lhs",["643"],"no-unused-vars","'SportListScreen' is defined but never used.","Identifier","unusedVar","'SportScreen' is defined but never used.","'Image' is defined but never used.","'Form' is defined but never used.","'ListGroupItem' is defined but never used.","'Rating' is defined but never used.","'createProductReview' is defined but never used.","'faHeart' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'getOrderDetails' is defined but never used.","'payOrder' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'axios' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'setQty' is assigned a value but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'wishlist' is assigned a value but never used.","'setWishlist' is assigned a value but never used.","'bought' is assigned a value but never used.","'setBought' is assigned a value but never used.","'owned' is assigned a value but never used.","'setOwned' is assigned a value but never used.","'boughtQty' is assigned a value but never used.","'setBoughtQty' is assigned a value but never used.","'orderId' is assigned a value but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","'successPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'successDeliver' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'loadingProductReview' is assigned a value but never used.","'errorProductReview' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["644"],"'success' is assigned a value but never used.","'useState' is defined but never used.","'ProductCarousel' is defined but never used.","'FaHome' is defined but never used.","'FaGamepad' is defined but never used.","'FaShoppingCart' is defined but never used.","'FaHeart' is defined but never used.","'GiSwordsEmblem' is defined but never used.","'SiTwitch' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'FaFileInvoice' is defined but never used.","'listProductDetails' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'FaComments' is defined but never used.","'Helmet' is defined but never used.","'getUserDetails' is defined but never used.","'deleteOrder' is defined but never used.","'ORDER_DELETE_REQUEST' is defined but never used.","'ORDER_DELETE_SUCCESS' is defined but never used.","'ORDER_DELETE_FAIL' is defined but never used.","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["645"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["646"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["647"],"'deliverHandler' is assigned a value but never used.","'download' is assigned a value but never used.","'uploading' is assigned a value but never used.","'uploadingDownload' is assigned a value but never used.","'uploadFileHandler' is assigned a value but never used.","'uploadDownloadHandler' is assigned a value but never used.","'updateUserProfile' is defined but never used.","'Dropdown' is defined but never used.","'createPlaylist' is defined but never used.","'deletePlaylist' is defined but never used.","'listPlaylists' is defined but never used.","'useRef' is defined but never used.","'playlists' is assigned a value but never used.","'liked' is assigned a value but never used.","'addToCartHandler' is assigned a value but never used.","'addToWishlist' is assigned a value but never used.","'addToPreorder' is assigned a value but never used.","'showPremium' is assigned a value but never used.","'setShowPremium' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showDownload' is assigned a value but never used.","'setShowDownload' is assigned a value but never used.","'handleDropdownToggle' is assigned a value but never used.","'addToPlaylist' is assigned a value but never used.","'Sport' is defined but never used.","'sportsError' is assigned a value but never used.","'sportsLoading' is assigned a value but never used.","'sports' is assigned a value but never used.","'sportsPage' is assigned a value but never used.","'sportsPages' is assigned a value but never used.","'SearchBox' is defined but never used.","'submitHandler' is assigned a value but never used.","'setLiked' is assigned a value but never used.","'listNews' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property newsTopRated.","MemberExpression","unexpectedWhitespace",{"range":"648","text":"649"},"'ORDER_LIST_MY_RESET' is defined but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},[427,429],".","Update the dependencies array to be: [dispatch, order]",{"range":"658","text":"659"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"660","text":"661"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"662","text":"663"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"664","text":"665"},[3059,3069],"[dispatch, order]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1239,1257],"[success, history, order._id, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]